<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Configuring RoleVoter bean to use custom access roles, by default roles
        should be in the form ROLE_{XXX} -->
    <beans:bean id="roleVoter"
                class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""></beans:property>
    </beans:bean>

    <beans:bean id="accessDecisionManager"
                class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters"
                               ref="roleVoter" />
    </beans:bean>


    <http authentication-manager-ref="dao-auth"
          access-decision-manager-ref="accessDecisionManager">



        <intercept-url pattern="/cp_employee**" access="Employee" />
        <intercept-url pattern="/cp_client**" access="User" />
        <form-login login-page="/login" authentication-failure-url="/login-denied"
                    username-parameter="username" password-parameter="password"
                    default-target-url="/cp_employee_main" />
        <logout invalidate-session="true" logout-success-url="/login"
                logout-url="/j_spring_security_logout" />
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1"
                                 expired-url="/login" />
        </session-management>
    </http>
    <context:annotation-config/>
    <context:component-scan base-package="ru.tsystems.tproject"/>

    <authentication-manager id="dao-auth">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>
    <beans:bean id="passwordEncoder"
                class="ru.tsystems.tproject.utils.Converter">
    </beans:bean>




    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="persistenceXmlLocation" value="classpath:persistence.xml"/>
        <beans:property name="persistenceUnitName" value="persistenceUnit" />
        <!--<property name="dataSource" ref="dataSource"/>-->
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>
    <tx:annotation-driven transaction-manager="transactionManager" />



   <!-- <beans:bean id="userDetailsService"
                class="ru.tsystems.tproject.security.AppUserDetailsServiceDAO">
    </beans:bean>-->

    <!-- MySQL DB DataSource -->
    <!--<beans:bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url"
                        value="jdbc:mysql://localhost:3306/tproject" />
        <beans:property name="username" value="pankaj" />
        <beans:property name="password" value="pankaj123" />
    </beans:bean>

    &lt;!&ndash; If DataSource is configured in Tomcat Servlet Container &ndash;&gt;
    <beans:bean id="dbDataSource"
                class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
    </beans:bean>-->
</beans:beans>